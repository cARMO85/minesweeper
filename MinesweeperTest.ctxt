#BlueJ class context
comment0.target=MinesweeperTest
comment0.text=\n\ The\ test\ class\ MinesweeperTest.\n\n\ @version\ 1.0\n
comment1.params=
comment1.target=void\ setUp()
comment1.text=\n\ Sets\ up\ the\ test\ fixture.\n\ (Called\ before\ every\ test\ case\ method.)\n
comment10.params=
comment10.target=void\ testInvalidMoves()
comment10.text=\n\ UNIT-010\n\ Test\ invalid\ moves\n\ Ensures\ making\ an\ invalid\ move\ returns\ an\ appropriate\ message.\n
comment11.params=
comment11.target=void\ testMoveBoundaries()
comment11.text=\n\ UNIT-011\n\ Test\ move\ boundaries\n\ Ensures\ moves\ at\ the\ boundaries\ are\ processed\ correctly\ and\ moves\ outside\ the\ boundaries\ throw\ exceptions.\n
comment12.params=
comment12.target=void\ testLivesBoundaries()
comment12.text=\n\ UNIT-012\n\ Test\ lives\ boundaries\n\ Ensures\ that\ the\ lives\ are\ correctly\ set\ to\ minimum\ and\ maximum\ values,\ and\ the\ game\ ends\ when\ lives\ reach\ zero.\n
comment13.params=
comment13.target=void\ testInvalidMoveBoundaries()
comment13.text=\n\ BOUNDARY-020\n\ Test\ invalid\ move\ boundaries\n\ Ensures\ that\ making\ moves\ with\ invalid\ coordinates\ throws\ an\ IndexOutOfBoundsException.\n
comment14.params=
comment14.target=void\ testUIInitialisationWithDefaultGame()
comment14.text=\n\ UNIT-032\n\ Test\ UI\ initialisation\ with\ default\ game\n\ Ensures\ the\ UI\ is\ initialised\ correctly\ with\ the\ default\ Minesweeper\ game.\n
comment15.params=
comment15.target=void\ testMinesweeperMoveProcessing()
comment15.text=\n\ UNIT-034\n\ Test\ Minesweeper\ move\ processing\n\ Ensures\ moves\ are\ processed\ correctly\ in\ the\ Minesweeper\ game.\n
comment16.params=
comment16.target=void\ testMinesweeperMineHit()
comment16.text=\n\ UNIT-035\n\ Test\ Minesweeper\ mine\ hit\n\ Ensures\ hitting\ a\ mine\ correctly\ decrements\ the\ player's\ lives.\n
comment17.params=
comment17.target=void\ testMinesweeperWinCondition()
comment17.text=\n\ UNIT-036\n\ Test\ Minesweeper\ win\ condition\n\ Simulates\ moves\ that\ lead\ to\ a\ win\ and\ ensures\ the\ game\ detects\ the\ win\ condition.\n
comment18.params=
comment18.target=void\ testMinesweeperLoseCondition()
comment18.text=\n\ UNIT-037\n\ Test\ Minesweeper\ lose\ condition\n\ Simulates\ moves\ that\ deplete\ all\ lives\ and\ ensures\ the\ game\ detects\ the\ loss\ condition.\n
comment19.params=
comment19.target=void\ testMinesweeperBoundaryConditions()
comment19.text=\n\ UNIT-038\n\ Test\ Minesweeper\ boundary\ conditions\n\ Ensures\ making\ a\ move\ out\ of\ bounds\ throws\ an\ IndexOutOfBoundsException.\n
comment2.params=
comment2.target=void\ testGameInitialisation()
comment2.text=\n\ UNIT-001\n\ Test\ game\ initiasation\n\ Ensures\ the\ game\ is\ initialised\ correctly.\n
comment20.params=
comment20.target=void\ testMinesweeperInvalidMoves()
comment20.text=\n\ UNIT-039\n\ Test\ Minesweeper\ invalid\ moves\n\ Ensures\ making\ an\ invalid\ move\ returns\ an\ appropriate\ message.\n
comment21.params=
comment21.target=void\ testMinesweeperBoundaryMoveProcessing()
comment21.text=\n\ UNIT-040\n\ Test\ Minesweeper\ boundary\ move\ processing\n\ Ensures\ moves\ at\ the\ boundaries\ are\ processed\ correctly\ and\ moves\ outside\ the\ boundaries\ throw\ exceptions.\n
comment3.params=
comment3.target=void\ testMakeMoveWithValidGuess()
comment3.text=\n\ UNIT-003\n\ Test\ makeMove\ with\ valid\ guess\n\ Ensures\ making\ a\ move\ with\ a\ valid\ guess\ updates\ the\ cell\ state\ correctly.\n
comment4.params=
comment4.target=void\ testMakeMoveWithMineHit()
comment4.text=\n\ UNIT-004\n\ Test\ makeMove\ with\ mine\ hit\n\ Ensures\ making\ a\ move\ that\ hits\ a\ mine\ updates\ the\ lives\ and\ cell\ state\ correctly.\n
comment5.params=
comment5.target=void\ testWinGameScenario()
comment5.text=\n\ UNIT-005\n\ Test\ win\ game\ scenario\n\ Simulates\ a\ sequence\ of\ moves\ that\ lead\ to\ a\ win\ and\ ensures\ the\ game\ detects\ the\ win\ condition.\n
comment6.params=
comment6.target=void\ testLoseAllLivesScenario()
comment6.text=\n\ UNIT-006\n\ Test\ lose\ all\ lives\ scenario\n\ Simulates\ a\ sequence\ of\ moves\ that\ deplete\ all\ lives\ and\ ensures\ the\ game\ detects\ the\ loss\ condition.\n
comment7.params=
comment7.target=void\ testGetAndSetLives()
comment7.text=\n\ UNIT-007\n\ Test\ get\ and\ set\ lives\n\ Ensures\ that\ the\ lives\ of\ the\ game\ can\ be\ set\ and\ retrieved\ correctly.\n
comment8.params=
comment8.target=void\ testResetGame()
comment8.text=\n\ UNIT-008\n\ Test\ reset\ game\n\ Ensures\ that\ the\ game\ board\ and\ lives\ are\ reset\ correctly.\n
comment9.params=
comment9.target=void\ testBoundaryConditions()
comment9.text=\n\ UNIT-009\n\ Test\ boundary\ conditions\n\ Ensures\ making\ a\ move\ out\ of\ bounds\ throws\ an\ IndexOutOfBoundsException.\n
numComments=22
