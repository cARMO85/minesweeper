#BlueJ class context
comment0.target=MinesweeperTest
comment0.text=\n\ The\ test\ class\ MinesweeperTest.\n\ This\ class\ contains\ unit\ tests\ for\ the\ Minesweeper\ class.\n
comment1.params=
comment1.target=void\ setUp()
comment1.text=\n\ Sets\ up\ the\ test\ fixture.\n\ Called\ before\ every\ test\ case\ method.\n
comment10.params=
comment10.target=void\ testCheckWinContinue()
comment10.text=\n\ Tests\ the\ game\ state\ when\ the\ game\ is\ still\ ongoing.\n\ Ensures\ that\ the\ game\ continues\ if\ not\ all\ mines\ are\ flagged\ or\ guessed.\n
comment11.params=
comment11.target=void\ testCheckWinWon()
comment11.text=\n\ Tests\ the\ game\ state\ when\ the\ game\ is\ won.\n\ Simulates\ a\ series\ of\ moves\ to\ win\ the\ game\ and\ checks\ the\ win\ condition.\n
comment12.params=
comment12.target=void\ testCheckWinLives()
comment12.text=\n\ Tests\ the\ game\ state\ when\ all\ lives\ are\ lost.\n\ Simulates\ moves\ to\ lose\ all\ lives\ and\ checks\ the\ lose\ condition.\n
comment13.params=
comment13.target=void\ testMakeMoveOutOfBounds()
comment13.text=\n\ Tests\ the\ boundary\ conditions\ for\ the\ makeMove\ method.\n\ Ensures\ that\ out-of-bounds\ moves\ are\ handled\ correctly.\n
comment14.params=
comment14.target=void\ testGetCellState()
comment14.text=\n\ Tests\ the\ getCellState\ method.\n\ Ensures\ that\ the\ correct\ state\ is\ returned\ for\ given\ coordinates.\n
comment15.params=
comment15.target=void\ testMakeMoveInvalidInputs()
comment15.text=\n\ Tests\ the\ makeMove\ method\ with\ invalid\ inputs.\n\ Ensures\ that\ invalid\ inputs\ are\ handled\ correctly.\n
comment2.params=
comment2.target=void\ tearDown()
comment2.text=\n\ Tears\ down\ the\ test\ fixture.\n\ Called\ after\ every\ test\ case\ method.\n
comment3.params=
comment3.target=void\ testBoardInitialisation()
comment3.text=\n\ Tests\ the\ initialisation\ of\ the\ game\ board.\n\ Ensures\ that\ the\ game\ and\ moves\ array\ are\ created,\ and\ the\ game\ size\ is\ set\ to\ 5.\n
comment4.params=
comment4.target=void\ testReadLevelFile()
comment4.text=\n\ Tests\ reading\ the\ level\ file.\n\ Ensures\ that\ the\ level\ file\ is\ read\ correctly\ and\ specific\ slots\ are\ set\ as\ expected.\n
comment5.params=
comment5.target=void\ testMakeMoveFlagMineUpperCase()
comment5.text=\n\ Tests\ flagging\ a\ mine\ with\ an\ upper-case\ input.\n\ Ensures\ that\ flagging\ a\ mine\ works\ with\ an\ upper-case\ input.\n
comment6.params=
comment6.target=void\ testMakeMoveFlagMineLowerCase()
comment6.text=\n\ Tests\ flagging\ a\ mine\ with\ a\ lower-case\ input.\n\ Ensures\ that\ flagging\ a\ mine\ works\ with\ a\ lower-case\ input.\n
comment7.params=
comment7.target=void\ testMakeMoveGuessMineUpperCase()
comment7.text=\n\ Tests\ guessing\ a\ mine\ with\ an\ upper-case\ input.\n\ Ensures\ that\ guessing\ a\ mine\ returns\ the\ expected\ message\ and\ updates\ the\ board\ state\ correctly.\n
comment8.params=
comment8.target=void\ testMakeMoveGuessMineLowerCase()
comment8.text=\n\ Tests\ guessing\ a\ mine\ with\ a\ lower-case\ input.\n\ Ensures\ that\ guessing\ a\ mine\ returns\ the\ expected\ message\ and\ updates\ the\ board\ state\ correctly.\n
comment9.params=
comment9.target=void\ testMakeMoveGuessEmpty()
comment9.text=\n\ Tests\ guessing\ an\ empty\ slot.\n\ Ensures\ that\ guessing\ an\ empty\ slot\ sets\ the\ state\ correctly\ and\ returns\ the\ appropriate\ message.\n
numComments=16
