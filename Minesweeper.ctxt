#BlueJ class context
comment0.target=Minesweeper
comment0.text=\n\ This\ class\ represents\ the\ Minesweeper\ game,\ handling\ the\ core\ game\ logic,\ \n\ managing\ the\ game\ board,\ player\ moves,\ and\ win\ conditions.\n\ It\ extends\ Observable\ to\ notify\ the\ GUI\ of\ changes\ in\ the\ game\ state.\n\ \n\ @authors\:\ Lauren\ Scott\ &\ Paul\ Carmody\n\ @version\ 2.0\n
comment1.params=
comment1.target=Minesweeper()
comment1.text=\n\ Constructs\ a\ Minesweeper\ game\ instance\ by\ initialising\ the\ game\ board,\n\ player\ board,\ and\ reading\ the\ level\ file.\n
comment10.params=
comment10.target=Slot[][]\ getBoard()
comment10.text=\n\ Returns\ the\ current\ player\ board.\n\ \n\ @return\ The\ player's\ board\ as\ a\ 2D\ array\ of\ Slots.\n
comment11.params=board
comment11.target=void\ setBoard(Slot[][])
comment11.text=\n\ Sets\ the\ player\ board\ to\ a\ new\ state.\n\ \n\ @param\ board\ The\ new\ state\ of\ the\ player\ board.\n
comment12.params=
comment12.target=int\ getLives()
comment12.text=\n\ Returns\ the\ number\ of\ lives\ the\ player\ has.\n\ \n\ @return\ The\ current\ number\ of\ lives.\n
comment13.params=lives
comment13.target=void\ setLives(int)
comment13.text=\n\ Sets\ the\ number\ of\ lives\ the\ player\ has.\n\ \n\ @param\ lives\ The\ new\ number\ of\ lives.\n
comment14.params=
comment14.target=void\ reset()
comment14.text=\n\ Resets\ the\ game\ by\ restoring\ the\ initial\ number\ of\ lives\ and\ resetting\ the\ board.\n
comment15.params=row\ col
comment15.target=Slot\ getSlot(int,\ int)
comment15.text=\n\ Returns\ a\ specific\ slot\ on\ the\ game\ board.\n\ \n\ @param\ row\ the\ row\ of\ the\ slot.\n\ @param\ col\ the\ column\ of\ the\ slot.\n\ @return\ The\ Slot\ at\ the\ specified\ position.\n
comment2.params=
comment2.target=Slot[][]\ getMoves()
comment2.text=\n\ Returns\ the\ entire\ set\ of\ player\ moves\ for\ the\ game.\n\ \n\ @return\ The\ current\ state\ of\ the\ player's\ moves\ as\ a\ 2D\ array\ of\ Slots.\n
comment3.params=row\ col
comment3.target=java.lang.String\ getIndividualMove(int,\ int)
comment3.text=\n\ Returns\ the\ state\ of\ an\ individual\ cell.\n\ \n\ @param\ row\ the\ row\ of\ the\ cell.\n\ @param\ col\ the\ column\ of\ the\ cell.\n\ @return\ The\ state\ of\ the\ specified\ cell.\n
comment4.params=
comment4.target=int\ calculateGameSize()
comment4.text=\n\ Calculates\ and\ returns\ the\ size\ of\ the\ game\ board\ by\ reading\ from\ the\ level\ file.\n\ \n\ @return\ The\ size\ of\ the\ game\ board.\n
comment5.params=
comment5.target=int\ getGameSize()
comment5.text=\n\ Provides\ access\ to\ the\ game\ size.\n\ \n\ @return\ The\ size\ of\ the\ game\ board.\n
comment6.params=
comment6.target=java.lang.String[][]\ readLevelFile()
comment6.text=\n\ Reads\ the\ level\ file\ to\ populate\ the\ game\ board\ and\ initialise\ player\ moves.\n\ \n\ @return\ The\ game\ board\ populated\ with\ the\ level's\ data.\n
comment7.params=
comment7.target=java.lang.String\ checkWin()
comment7.text=\n\ Checks\ whether\ the\ game\ has\ been\ won,\ lost,\ or\ is\ still\ ongoing.\n\ \n\ @return\ "won"\ if\ the\ player\ has\ won,\ "lives"\ if\ the\ player\ has\ run\ out\ of\ lives,\ \n\ or\ "continue"\ if\ the\ game\ is\ still\ ongoing.\n
comment8.params=row\ col\ guess
comment8.target=java.lang.String\ makeMove(int,\ int,\ java.lang.String)
comment8.text=\n\ Allows\ a\ user\ to\ make\ a\ move\ in\ the\ game.\n\ \n\ @param\ row\ \ \ the\ row\ of\ the\ move.\n\ @param\ col\ \ \ the\ column\ of\ the\ move.\n\ @param\ guess\ the\ player's\ guess,\ either\ "M"\ for\ mine\ or\ "G"\ for\ guess.\n\ @return\ A\ message\ indicating\ the\ result\ of\ the\ move.\n
comment9.params=row\ col
comment9.target=java.lang.String\ getCellState(int,\ int)
comment9.text=\n\ Gets\ the\ current\ state\ of\ an\ individual\ cell.\n\ \n\ @param\ row\ the\ row\ of\ the\ cell.\n\ @param\ col\ the\ column\ of\ the\ cell.\n\ @return\ The\ state\ of\ the\ specified\ cell.\n
numComments=16
